{"version":3,"sources":["Table.js","Form.js","Api.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","className","onClick","removeCharacter","Table","cellspacing","Form","initialState","state","handleChange","event","target","value","setState","submitForm","document","querySelectorAll","forEach","input","handleSubmit","this","htmlFor","placeholder","type","id","onChange","Component","Api","data","fetch","then","result","json","entry","App","characters","filter","character","i","ReactDOM","render","getElementById"],"mappings":"+RAGMA,G,MAAc,WAClB,OACE,gCACE,+BACE,sCACA,qCACA,+CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,UAAU,SAASC,QAAS,kBAAMT,EAAMU,gBAAgBL,IAAhE,wBAJKA,MAUb,OAAO,gCAAQJ,KAkBFU,EAfD,SAACX,GAAW,IAEfE,EAAkCF,EAAlCE,cAAeQ,EAAmBV,EAAnBU,gBAEtB,OACE,wBAAOE,YAAY,IAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACCV,cAAeA,EACfQ,gBAAiBA,Q,OCrCLG,G,kNACnBC,aAAe,CACbR,KAAM,GACNC,IAAK,I,EAGPQ,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBZ,EADiB,EACjBA,KAAMa,EADW,EACXA,MAEb,EAAKC,SAAL,eACGd,EAAOa,K,EAIZE,WAAa,WACIC,SAASC,iBAAiB,SAClCC,SAAQ,SAACC,GACK,KAAhBA,EAAMN,OAAgC,WAAhBM,EAAMN,QAC5B,EAAKnB,MAAM0B,aAAa,EAAKX,OAC7B,EAAKK,SAAS,EAAKN,mB,uDAMhB,IAAD,EACaa,KAAKZ,MAAnBT,EADC,EACDA,KAAMC,EADL,EACKA,IAEd,OACI,iCACE,uBAAOqB,QAAQ,OAAf,kBACA,uBACEpB,UAAU,QACVqB,YAAY,OACZC,KAAK,OACLxB,KAAK,OACLyB,GAAG,OACHZ,MAAOb,EACP0B,SAAUL,KAAKX,eACjB,uBAAOY,QAAQ,MAAf,iBACA,uBACEpB,UAAU,QACVqB,YAAY,MACZC,KAAK,OACLxB,KAAK,MACLyB,GAAG,MACHZ,MAAOZ,EACPyB,SAAUL,KAAKX,eACjB,uBAAOR,UAAU,SAASsB,KAAK,SAASrB,QAASkB,KAAKN,WAAYF,MAAM,kB,GAlD9Cc,cC8BnBC,G,kNA7BbnB,MAAQ,CACNoB,KAAM,I,kEAIa,IAAD,OAIlBC,MAFE,kGAGCC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACL,EAAKlB,SAAS,CACZe,KAAMG,S,+BAKJ,IAGFA,EAFSX,KAAKZ,MAAboB,KAEahC,KAAI,SAACqC,EAAOnC,GAC9B,OAAO,6BAAiBmC,GAARnC,MAGlB,OAAO,6BAAKiC,Q,GA1BEL,cCEGQ,E,4MACnB1B,MAAQ,CACN2B,WAAY,CACV,CACEpC,KAAM,UACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,mBAEP,CACED,KAAM,SACNC,IAAK,e,EAMXG,gBAAkB,SAACL,GAAW,IACnBqC,EAAc,EAAK3B,MAAnB2B,WAEP,EAAKtB,SAAS,CACZsB,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMxC,Q,EAKrBqB,aAAe,SAACkB,GACZ,EAAKxB,SAAS,CAACsB,WAAW,GAAD,mBAAM,EAAK3B,MAAM2B,YAAjB,CAA6BE,O,uDAGhD,IACAF,EAAef,KAAKZ,MAApB2B,WAER,OACG,sBAAKlC,UAAU,YAAf,UACE,gDACA,uFACD,cAAC,EAAD,CACCN,cAAewC,EACfhC,gBAAiBiB,KAAKjB,kBACtB,sDACA,cAAC,EAAD,CAAMgB,aAAcC,KAAKD,eACzB,4CACA,cAAC,EAAD,W,GAlDwBO,aCCjCa,IAASC,OAAO,cAAC,EAAD,IAASzB,SAAS0B,eAAe,W","file":"static/js/main.1b6b21e4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Table.css';\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n        <th>Remove</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button className='button' onClick={() => props.removeCharacter(index)}>Delete</button>\r\n       </td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return <tbody>{rows}</tbody>\r\n}\r\n\r\nconst Table = (props) => {\r\n \r\n    const {characterData, removeCharacter} = props\r\n\r\n    return (\r\n      <table cellspacing=\"0\">\r\n        <TableHeader />\r\n        <TableBody\r\n         characterData={characterData}\r\n         removeCharacter={removeCharacter} />\r\n      </table>\r\n    )\r\n  \r\n}\r\n\r\nexport default Table\r\n\r\n","import React, {Component} from 'react';\r\nimport './Form.css';\r\n\r\nexport default class Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job: '',\r\n  }\r\n\r\n  state = this.initialState\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  submitForm = () => {\r\n    const inputs = document.querySelectorAll('input');\r\n    inputs.forEach((input) => {\r\n      if(input.value !== '' && input.value !== 'Submit'){\r\n         this.props.handleSubmit(this.state)\r\n         this.setState(this.initialState)\r\n      }\r\n    })\r\n      \r\n    }\r\n\r\n  render() {\r\n  const { name, job } = this.state;\r\n\r\n  return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          className='input'\r\n          placeholder='name' \r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange} />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          className='input'\r\n          placeholder='job' \r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange} />\r\n        <input className='button' type=\"button\" onClick={this.submitForm} value=\"Submit\" />\r\n         \r\n      </form>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './Api.css';\r\n\r\nclass Api extends Component {\r\n  state = {\r\n    data: [],\r\n  }\r\n\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    const url =\r\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\r\n\r\n    fetch(url)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          data: result,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {data} = this.state\r\n\r\n    const result = data.map((entry, index) => {\r\n      return <li key={index}>{entry}</li>\r\n    })\r\n\r\n    return <ul>{result}</ul>\r\n  }\r\n}\r\n\r\nexport default Api","import React, {Component} from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\nimport Api from './Api';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    characters: [\r\n      {\r\n        name: 'Charlie',\r\n        job: 'Janitor',\r\n      },\r\n      {\r\n        name: 'Mac',\r\n        job: 'Bouncer',\r\n      },\r\n      {\r\n        name: 'Dee',\r\n        job: 'Aspring actress',\r\n      },\r\n      {\r\n        name: 'Dennis',\r\n        job: 'Bartender',\r\n      },\r\n    \r\n    ]\r\n  }\r\n\r\n  removeCharacter = (index) => {\r\n      const {characters} = this.state\r\n\r\n      this.setState({\r\n        characters: characters.filter((character, i) => {\r\n          return i !== index\r\n        }),\r\n      })\r\n    }\r\n  \r\n  handleSubmit = (character) => {\r\n      this.setState({characters: [...this.state.characters, character]})\r\n    }  \r\n\r\n  render() {\r\n    const { characters } = this.state\r\n\r\n    return (\r\n       <div className=\"container\">\r\n         <h1>React Tutorial</h1>\r\n         <span>Add a character with a name and a job to the table.</span>\r\n        <Table \r\n         characterData={characters} \r\n         removeCharacter={this.removeCharacter}/>\r\n         <h2>Add new name and job</h2>\r\n         <Form handleSubmit={this.handleSubmit} />\r\n         <h2>Used fetch</h2>\r\n         <Api/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}